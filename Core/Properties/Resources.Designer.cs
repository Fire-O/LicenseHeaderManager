//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Int32 similar to 5.
        /// </summary>
        internal static int Constant_DisplayNameLookup_TimeDifferenceInSecondsBeforeTooOld {
            get {
                object obj = ResourceManager.GetObject("Constant_DisplayNameLookup_TimeDifferenceInSecondsBeforeTooOld", resourceCulture);
                return ((int)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The header definition for the extension {0} is null or empty\n .
        /// </summary>
        internal static string Error_HeaderNullOrEmpty {
            get {
                return ResourceManager.GetString("Error_HeaderNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while parsing the file {0}.\nMake sure the comment syntax is correct..
        /// </summary>
        internal static string Error_InvalidLicenseHeader {
            get {
                return ResourceManager.GetString("Error_InvalidLicenseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No comment definitions found for {0} files.\nDo you want to add them to the configuration?.
        /// </summary>
        internal static string Error_LanguageNotFound {
            get {
                return ResourceManager.GetString("Error_LanguageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must not insert license headers into the license header definition file (extension: {0}).
        /// </summary>
        internal static string Error_LicenseHeaderDefinition_InvalidTarget {
            get {
                return ResourceManager.GetString("Error_LicenseHeaderDefinition_InvalidTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This extension currently has no header defined in the license header definition file\n .
        /// </summary>
        internal static string Error_NoHeaderFound {
            get {
                return ResourceManager.GetString("Error_NoHeaderFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileNotFoundException caught while trying to lookup the display name with &apos;UserPrincipal.Current.DisplayName&apos;. \nThis is likely caused by an Windows 10 update and can be fixed by updating the registry. \nSee https://git.io/vza4O for more information..
        /// </summary>
        internal static string UserInfo_LookupFailure_FileNotFoundException_Information {
            get {
                return ResourceManager.GetString("UserInfo_LookupFailure_FileNotFoundException_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception caught while trying to lookup the display name with &apos;UserPrincipal.Current.DisplayName&apos;. \nStacktrace: {0}
        ///.
        /// </summary>
        internal static string UserInfo_LookupFailure_Information {
            get {
                return ResourceManager.GetString("UserInfo_LookupFailure_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unknown&gt;.
        /// </summary>
        internal static string UserInfo_UnknownDisplayNameString {
            get {
                return ResourceManager.GetString("UserInfo_UnknownDisplayNameString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension: {0}\n\nThe header definition for {0} files contains non-comment text.\nIf you insert this header, you will not be able to remove or replace the header automatically!\n\nDo you really want to add this header to the file?.
        /// </summary>
        internal static string Warning_InvalidLicenseHeader {
            get {
                return ResourceManager.GetString("Warning_InvalidLicenseHeader", resourceCulture);
            }
        }
    }
}
