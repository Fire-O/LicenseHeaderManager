/* Copyright (c) rubicon IT GmbH
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add....
        /// </summary>
        internal static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to Add Existing License Header Definition File?.
        /// </summary>
        internal static string AddExistingLicenseHeaderFileQuestion {
            get {
                return ResourceManager.GetString("AddExistingLicenseHeaderFileQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After.
        /// </summary>
        internal static string After {
            get {
                return ResourceManager.GetString("After", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After selected command.
        /// </summary>
        internal static string AfterCommand {
            get {
                return ResourceManager.GetString("AfterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before.
        /// </summary>
        internal static string Before {
            get {
                return ResourceManager.GetString("Before", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before selected command.
        /// </summary>
        internal static string BeforeCommand {
            get {
                return ResourceManager.GetString("BeforeCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin.
        /// </summary>
        internal static string Begin {
            get {
                return ResourceManager.GetString("Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin comment.
        /// </summary>
        internal static string BeginComment {
            get {
                return ResourceManager.GetString("BeginComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin region.
        /// </summary>
        internal static string BeginRegion {
            get {
                return ResourceManager.GetString("BeginRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Int32 similar to 5.
        /// </summary>
        internal static int Constant_DisplayNameLookup_TimeDifferenceInSecondsBeforeTooOld {
            get {
                object obj = ResourceManager.GetObject("Constant_DisplayNameLookup_TimeDifferenceInSecondsBeforeTooOld", resourceCulture);
                return ((int)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit....
        /// </summary>
        internal static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End.
        /// </summary>
        internal static string End {
            get {
                return ResourceManager.GetString("End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End comment.
        /// </summary>
        internal static string EndComment {
            get {
                return ResourceManager.GetString("EndComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End region.
        /// </summary>
        internal static string EndRegion {
            get {
                return ResourceManager.GetString("EndRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file could not be created..
        /// </summary>
        internal static string Error_CreatingFile {
            get {
                return ResourceManager.GetString("Error_CreatingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while parsing the file {0}.\nMake sure the comment syntax is correct..
        /// </summary>
        internal static string Error_InvalidLicenseHeader {
            get {
                return ResourceManager.GetString("Error_InvalidLicenseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide at least an extension and either a line comment or begin and end comment tags..
        /// </summary>
        internal static string Error_LanguageInvalid {
            get {
                return ResourceManager.GetString("Error_LanguageInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No comment definitions found for {0} files.\nDo you want to add them to the configuration?.
        /// </summary>
        internal static string Error_LanguageNotFound {
            get {
                return ResourceManager.GetString("Error_LanguageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No license header definition file found in following projects:\n\n{0}\n\nDo you want to add an existing License Header Definition File into these Projects?.
        /// </summary>
        internal static string Error_MultipleProjectsNoLicenseHeaderFile {
            get {
                return ResourceManager.GetString("Error_MultipleProjectsNoLicenseHeaderFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No license header definition file found in project {0}.\nDo you want to add a new License Header Definition File?.
        /// </summary>
        internal static string Error_NoHeaderDefinition {
            get {
                return ResourceManager.GetString("Error_NoHeaderDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This extension currently has no header defined in the license header definition file\n .
        /// </summary>
        internal static string Error_NoHeaderFound {
            get {
                return ResourceManager.GetString("Error_NoHeaderFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project has no license header file..
        /// </summary>
        internal static string Error_NoLicenseHeaderFile {
            get {
                return ResourceManager.GetString("Error_NoLicenseHeaderFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute &apos;Add license header&apos; command.
        /// </summary>
        internal static string Execute {
            get {
                return ResourceManager.GetString("Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension.
        /// </summary>
        internal static string Extension {
            get {
                return ResourceManager.GetString("Extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extensions.
        /// </summary>
        internal static string Extensions {
            get {
                return ResourceManager.GetString("Extensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit....
        /// </summary>
        internal static string FileHeaderTextEditButton {
            get {
                return ResourceManager.GetString("FileHeaderTextEditButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text for new license header definitions.
        /// </summary>
        internal static string FileHeaderTextLabel {
            get {
                return ResourceManager.GetString("FileHeaderTextLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add License Headers because there is no License Header Definition File. Please add one and try again..
        /// </summary>
        internal static string Information_NoDefinitionFileStopUpdating {
            get {
                return ResourceManager.GetString("Information_NoDefinitionFileStopUpdating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically insert license headers in new files.
        /// </summary>
        internal static string InsertInNewFiles {
            get {
                return ResourceManager.GetString("InsertInNewFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager.
        /// </summary>
        internal static string LicenseHeaderManagerName {
            get {
                return ResourceManager.GetString("LicenseHeaderManagerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line.
        /// </summary>
        internal static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line Comment.
        /// </summary>
        internal static string LineComment {
            get {
                return ResourceManager.GetString("LineComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can link the &apos;Add license header&apos; command to other commands so that it is automatically executed before or after them..
        /// </summary>
        internal static string LinkedCommands {
            get {
                return ResourceManager.GetString("LinkedCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We could not update following linked files, because there is no license header definition file in their original project, or the original project is not part of this solution.\n\n{0}.
        /// </summary>
        internal static string LinkedFileUpdateInformation {
            get {
                return ResourceManager.GetString("LinkedFileUpdateInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager.
        /// </summary>
        internal static string NameOfThisExtension {
            get {
                return ResourceManager.GetString("NameOfThisExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string Ok {
            get {
                return ResourceManager.GetString("Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No License Header Definition File found in the Project. Do you want to add an existing License Header Definition File to the project?.
        /// </summary>
        internal static string Question_AddExistingDefinitionFileToProject {
            get {
                return ResourceManager.GetString("Question_AddExistingDefinitionFileToProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No License Header Definition File found. Do you want to add a new one for the Solution?.
        /// </summary>
        internal static string Question_AddNewLicenseHeaderDefinitionForSolution {
            get {
                return ResourceManager.GetString("Question_AddNewLicenseHeaderDefinitionForSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Definition Files added. Do you want to stop the update process to configure them?.
        /// </summary>
        internal static string Question_StopForConfiguringDefinitionFilesMultipleFiles {
            get {
                return ResourceManager.GetString("Question_StopForConfiguringDefinitionFilesMultipleFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Definition File added. Do you want to stop the update process to configure it?.
        /// </summary>
        internal static string Question_StopForConfiguringDefinitionFilesSingleFile {
            get {
                return ResourceManager.GetString("Question_StopForConfiguringDefinitionFilesSingleFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        internal static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can specify a list of keywords separated by commas..
        /// </summary>
        internal static string RequiredKeywordsTooltip {
            get {
                return ResourceManager.GetString("RequiredKeywordsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search:.
        /// </summary>
        internal static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip expression.
        /// </summary>
        internal static string SkipExpression {
            get {
                return ResourceManager.GetString("SkipExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some languages require special instructions at the very beginning of the file.\nXML-based languages need the &lt;?xml ... ?&gt; declaration for example. You can\ndefine a regular expression that identifies these instructions here so that the\nlicense header comment can be inserted after them, leaving the file valid.\n\nSee the online documentation on https://github.com/rubicon-oss/LicenseHeaderManager\nfor more detailed information..
        /// </summary>
        internal static string SkipExpressionHelp {
            get {
                return ResourceManager.GetString("SkipExpressionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager has automatically updated its configuration to add SkipExpressions.\n\nPlease check your language settings if they were modified\nbefore the update.\n\nIf you added any XML-based languages, you might need to add\na SkipExpression..
        /// </summary>
        internal static string Update_1_1_3 {
            get {
                return ResourceManager.GetString("Update_1_1_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager has automatically updated its configuration to add .config and .xsd.\n\nPlease check your language settings if they were modified\nbefore the update..
        /// </summary>
        internal static string Update_1_3_1 {
            get {
                return ResourceManager.GetString("Update_1_3_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager has automatically updated its configuration\nto include settings for the default license header definition file..
        /// </summary>
        internal static string Update_DefaultLicenseHeader_1_2_1 {
            get {
                return ResourceManager.GetString("Update_DefaultLicenseHeader_1_2_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager has automatically updated its configuration\nto fix the settings for C# and VB.NET regions.\n\nPlease check your language settings if they were modified\nbefore the update..
        /// </summary>
        internal static string Update_RegionSettings_1_2_1 {
            get {
                return ResourceManager.GetString("Update_RegionSettings_1_2_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Header Manager has automatically updated its configuration\nto fix a problem with the SkipExpressions for XML, HTML (and similar), and JS files.\n\nPlease check your language settings if they were modified\nbefore the update..
        /// </summary>
        internal static string Update_SkipExpressions_1_2_2 {
            get {
                return ResourceManager.GetString("Update_SkipExpressions_1_2_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Project {0}/{1}.
        /// </summary>
        internal static string UpdateSolution {
            get {
                return ResourceManager.GetString("UpdateSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating files....
        /// </summary>
        internal static string UpdatingFiles {
            get {
                return ResourceManager.GetString("UpdatingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only remove comments containing at least one of the keywords below.
        /// </summary>
        internal static string UseRequiredKeywords {
            get {
                return ResourceManager.GetString("UseRequiredKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileNotFoundException caught while trying to lookup the display name with &apos;UserPrincipal.Current.DisplayName&apos;. \nThis is likely caused by an Windows 10 update and can be fixed by updating the registry. \nSee https://git.io/vza4O for more information..
        /// </summary>
        internal static string UserInfo_LookupFailure_FileNotFoundException_Information {
            get {
                return ResourceManager.GetString("UserInfo_LookupFailure_FileNotFoundException_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception caught while trying to lookup the display name with &apos;UserPrincipal.Current.DisplayName&apos;. \nStacktrace: {0}
        ///.
        /// </summary>
        internal static string UserInfo_LookupFailure_Information {
            get {
                return ResourceManager.GetString("UserInfo_LookupFailure_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unknown&gt;.
        /// </summary>
        internal static string UserInfo_UnknownDisplayNameString {
            get {
                return ResourceManager.GetString("UserInfo_UnknownDisplayNameString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected license header definition file already exists in this project. It is not possible to add a link to an item that already exists in the project..
        /// </summary>
        internal static string Warning_CantLinkItemInSameProject {
            get {
                return ResourceManager.GetString("Warning_CantLinkItemInSameProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The header definition for {0} files contains non-comment text.\nIf you insert this header, you will not be able to remove or replace the header automatically!\nDo you really want to add this header to the file?.
        /// </summary>
        internal static string Warning_InvalidLicenseHeader {
            get {
                return ResourceManager.GetString("Warning_InvalidLicenseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit default header definition.
        /// </summary>
        internal static string WpfDefaultLicenseHeaderDialogTitle {
            get {
                return ResourceManager.GetString("WpfDefaultLicenseHeaderDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit language.
        /// </summary>
        internal static string WpfLanguageDialogTitle {
            get {
                return ResourceManager.GetString("WpfLanguageDialogTitle", resourceCulture);
            }
        }
    }
}
